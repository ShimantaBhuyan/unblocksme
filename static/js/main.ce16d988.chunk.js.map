{"version":3,"sources":["utils/api.js","logo.svg","containers/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["cookieName","SPREADSHEETID","document","cookie","split","find","row","startsWith","console","log","initialData","initialSheet","properties","title","sheets","data","api","CLIENT_ID","DISCOVERY_DOCS","SCOPES","loadGoogleScript","id","firstJs","getElementsByTagName","getElementById","js","createElement","src","onload","window","onGoogleScriptLoad","parentNode","insertBefore","getSheetsData","sheetName","gapi","client","spreadsheets","values","get","spreadsheetId","localStorage","getItem","range","then","response","result","length","i","error","message","createSpreadsheet","e","a","create","status","setItem","appendToSpreadsheet","append","category","valueInputOption","insertDataOption","majorDimension","description","date","err","TaskForm","props","onSubmit","preventDefault","formData","FormData","target","entries","key","value","htmlFor","type","name","uuid","readOnly","Container","styled","div","App","useState","setGapi","setAuthButtonShow","setSignOutButtonShow","setSpreadsheetId","updateSigninStatus","isSignedIn","useEffect","_gapi","load","init","clientId","discoveryDocs","scope","auth2","getAuthInstance","listen","JSON","stringify","className","onClick","event","signIn","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce16d988.chunk.js","sourcesContent":["\r\nconst CONFIG = { \"client_id\": \"235806155860-4ac63tu7rnkg02pqv0j7ads9slf3jcmq.apps.googleusercontent.com\" };\r\n\r\nconst getSpecificCookie = (cookieName) => {\r\n    return document.cookie.split('; ')\r\n        .find(row => row.startsWith(`${cookieName}=`))\r\n        .split('=')[1];\r\n}\r\n\r\nconst SPREADSHEETID = getSpecificCookie(\"unblocksMeSpreadsheetId\");\r\nif (SPREADSHEETID) {\r\n    console.log(\"Retrieved spreadsheet: \", SPREADSHEETID);\r\n}\r\n\r\nconst CLIENT_ID = CONFIG.client_id; // = '<YOUR_CLIENT_ID>';\r\n\r\n// Array of API discovery doc URLs for APIs used by the quickstart\r\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\n\r\n// Authorization scopes required by the API; multiple scopes can be\r\n// included, separated by spaces.\r\n// https://www.googleapis.com/auth/drive.file\r\nconst SCOPES = \"https://www.googleapis.com/auth/spreadsheets\";\r\n\r\nconst loadGoogleScript = () => {\r\n\r\n    // Loads the Google JavaScript Library\r\n    (function () {\r\n        const id = 'google-js';\r\n        const src = 'https://apis.google.com/js/platform.js'; // (Ref. 1)\r\n        //https://apis.google.com/js/api.js\r\n\r\n        // We have at least one script (React)\r\n        const firstJs = document.getElementsByTagName('script')[0]; // (Ref. 2)\r\n\r\n        // Prevent script from loading twice\r\n        if (document.getElementById(id)) { return; } // (Ref. 3)\r\n        const js = document.createElement('script'); // (Ref. 4)\r\n        js.id = id;\r\n        js.src = src;\r\n        js.onload = window.onGoogleScriptLoad; // (Ref. 5)\r\n        firstJs.parentNode.insertBefore(js, firstJs);\r\n    }());\r\n\r\n}\r\n\r\nconst getSheetsData = (sheetName, gapi, id = \"\") => {\r\n    gapi.client.sheets.spreadsheets.values.get({\r\n        spreadsheetId: id || SPREADSHEETID || window.localStorage.getItem(\"spreadsheetId\"),\r\n        range: `${sheetName}!A2:D1000`,\r\n    }).then(function (response) {\r\n        var range = response.result;\r\n        console.log(range);\r\n        if (range.values.length > 0) {\r\n            for (var i = 0; i < range.values.length; i++) {\r\n                var row = range.values[i];\r\n                // Print columns A and E, which correspond to indices 0 and 4.\r\n                console.log(row);\r\n            }\r\n        } else {\r\n            console.log('No data found.');\r\n        }\r\n    }, function (response) {\r\n        console.log('Error: ' + response.result.error.message);\r\n    });\r\n}\r\n\r\nconst initialData = {\r\n    \"startRow\": 0,\r\n    \"startColumn\": 0,\r\n    \"rowData\": [\r\n        {\r\n            \"values\": [\r\n                {\r\n                    \"userEnteredValue\": {\r\n                        \"stringValue\": \"TaskId\",\r\n                    },\r\n                },\r\n                {\r\n                    \"userEnteredValue\": {\r\n                        \"stringValue\": \"Description\",\r\n                    },\r\n                },\r\n                {\r\n                    \"userEnteredValue\": {\r\n                        \"stringValue\": \"Date\",\r\n                    },\r\n                },\r\n                // {\r\n                //     \"userEnteredValue\": {\r\n                //         \"stringValue\": \"Number of Characters\",\r\n                //     },\r\n                // },\r\n                {\r\n                    \"userEnteredValue\": {\r\n                        \"stringValue\": \"Status\",\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n}\r\n\r\nconst initialSheet = {\r\n    properties: {\r\n        title: \"UnblocksMe\"\r\n    },\r\n    sheets: [\r\n        {\r\n            properties: {\r\n                title: \"Work\",\r\n            },\r\n            data: [\r\n                initialData\r\n            ]\r\n        },\r\n        {\r\n            properties: {\r\n                title: \"Personal\"\r\n            },\r\n            data: [\r\n                initialData\r\n            ]\r\n        },\r\n        {\r\n            properties: {\r\n                title: \"Recurring\"\r\n            },\r\n            data: [\r\n                initialData\r\n            ]\r\n        },\r\n        {\r\n            properties: {\r\n                title: \"Miscellaneous\"\r\n            },\r\n            data: [\r\n                initialData\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\nconst createSpreadsheet = async (e, gapi) => {\r\n    gapi.client.sheets.spreadsheets.create(initialSheet).then((response) => {\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n            console.log(\"Spreadsheet created!\");\r\n            document.cookie = `unblocksMeSpreadsheetId=${response.result.spreadsheetId}; SameSite=None; Secure`;\r\n            window.localStorage.setItem(\"spreadsheetId\", response.result.spreadsheetId);\r\n        }\r\n    });\r\n}\r\n\r\nconst appendToSpreadsheet = async (e, gapi, values) => {\r\n    console.log(values)\r\n    gapi.client.sheets.spreadsheets.values.append({\r\n        spreadsheetId: SPREADSHEETID,\r\n        range: `${values.category}!A2:D1000`,\r\n        valueInputOption: 'USER_ENTERED',\r\n        insertDataOption: 'INSERT_ROWS',\r\n        majorDimension: \"ROWS\",\r\n        values: [\r\n            [\r\n                values.id,\r\n                values.description,\r\n                values.date,\r\n                values.status\r\n            ]\r\n        ]\r\n    })\r\n    .then(function (response) {\r\n        // Handle the results here (response.result has the parsed body).\r\n        console.log(\"Added values to spreadsheet: \", response);\r\n    },\r\n    function (err) { console.error(\"Append error:\", err); });\r\n}\r\n\r\nconst api = {\r\n    CLIENT_ID,\r\n    DISCOVERY_DOCS,\r\n    SCOPES,\r\n    loadGoogleScript,\r\n    getSheetsData,\r\n    createSpreadsheet,\r\n    appendToSpreadsheet,\r\n    SPREADSHEETID\r\n};\r\n\r\nexport default api;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport api from \"../utils/api\";\r\n\r\nconst TaskForm = (props) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        let data = {};\r\n        for (var [key, value] of formData.entries()) { \r\n            data[key] = value;\r\n        }\r\n        // const data = {\r\n        //     id: formData.get('taskId'),\r\n        //     description: formData.get(\"description\"),\r\n        //     date: formData.get('date'),\r\n        //     category: formData.get('category'),\r\n        //     status: formData.get('status')\r\n        // }\r\n        console.log(data);\r\n        api.appendToSpreadsheet(e, props.gapi, data);\r\n        //api.login(formData.get('email'), formData.get('password'));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"taskId\">Task ID</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"taskId\"\r\n                    name=\"id\"\r\n                    value={uuid()}\r\n                    readOnly=\"readonly\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <select id=\"category\" name=\"category\">\r\n                    <option value=\"default\">Select status</option>\r\n                    <option value=\"Work\">Work</option>\r\n                    <option value=\"Personal\">Personal</option>\r\n                    <option value=\"Recurring\">Recurring</option>\r\n                    <option value=\"Miscellaneous\">Miscellaneous</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"status\">Status</label>\r\n                <select id=\"status\" name=\"status\">\r\n                    <option value=\"default\">Select status</option>\r\n                    <option value=\"active\">Active</option>\r\n                    <option value=\"overdue\">Overdue</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                </select>\r\n            </div>\r\n            <button>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport styled from \"styled-components\";\nimport api from \"./utils/api\";\nimport TaskForm from \"./containers/TaskForm\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-contents: center;\n  align-items: center;\n`;\n\nfunction App() {\n  const [gapi, setGapi] = useState();\n  const [authButtonShow, setAuthButtonShow] = useState(true);\n  const [signOutButtonShow, setSignOutButtonShow] = useState(false);\n  const [spreadsheetId, setSpreadsheetId] = useState(\"\");\n\n  const sheetName = \"Work\";\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      setAuthButtonShow(false);\n      setSignOutButtonShow(true);\n      //listMajors();\n    } else {\n      setAuthButtonShow(true);\n      setSignOutButtonShow(false);\n    }\n  }\n\n  const initClient = () => {\n    window.onGoogleScriptLoad = () => { // (Ref. 1)\n\n      const _gapi = window.gapi; // (Ref. 2)\n      setGapi(_gapi);\n\n      _gapi.load('client:auth2', () => {\n        _gapi.client.init({\n          clientId: api.CLIENT_ID,\n          discoveryDocs: api.DISCOVERY_DOCS,\n          scope: api.SCOPES\n        }).then(function () {\n          // Listen for sign-in state changes.\n          _gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n          // Handle the initial sign-in state.\n          updateSigninStatus(_gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, function (error) {\n          console.log(JSON.stringify(error, null, 2));\n        });\n      });\n    }\n  }\n\n  useEffect(() => {\n    initClient();\n    api.loadGoogleScript();\n    setSpreadsheetId(api.SPREADSHEETID);\n  }, [api]);\n\n  useEffect(() => {\n    console.log(\"SPREADSHEETID:\", spreadsheetId);\n  }, [spreadsheetId])\n\n  function handleAuthClick(event) {\n    gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  const handleCreateSpreadsheet = (e) => {\n    api.createSpreadsheet(e, gapi);\n  }\n\n  const handleGetSpreadsheet = (e) => {\n    api.getSheetsData(\"Work\", gapi);\n  }\n\n  const handleAppendToSpreadsheet = (e) => {\n    \n  }\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Container>\n        <button name=\"authButton\" onClick={handleAuthClick}>Authorize</button>\n        <button name=\"signOutButton\" onClick={handleSignoutClick}>Sign Out</button>\n        <button name=\"createSheetButton\" onClick={handleCreateSpreadsheet}>Create Spreadsheet</button>\n        <button name=\"getSheetDataButton\" onClick={handleGetSpreadsheet}>Get Spreadsheet</button>\n        <TaskForm sheetName={sheetName} gapi={gapi}/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}